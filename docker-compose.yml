version: '3.4'
services:
  configuration.gateway:
    image: ${DOCKER_REGISTRY-}configurationgateway
    hostname: configuration.gateway
    #container_name: gateway
    #expose:
    #  - 80
    ports:
      - 5052:80
    build:
      context: .
      dockerfile: Configuration.API.GateWay/Configuration.GateWay/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    
    depends_on:
      - solutioncore
    networks:
      - backend

  solutioncore:
    image: ${DOCKER_REGISTRY-}solutioncore
    hostname: solutioncore
    container_name:  ${ENV_PREFFIX}solutioncore
    #expose:
    #  - 5053
    ports:
      - 5053:80
    build:
      context: .
      dockerfile: SolutionCore/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - DOCKER_ENV_VARIABLE="variable desde el docker-compose [${ENV_PREFFIX}]"
    depends_on:
      - dbCore
    networks:
      - backend
    env_file:
      - "application_file.env"

  # web_core:
  #   image: ${DOCKER_REGISTRY-}webcore
  #   hostname: web_core
  #   ports:
  #     - 44512:80
  #   build:
  #     context: .
  #     dockerfile: web_core/Dockerfile
  #   networks:
  #     - backend

  dbCore:
    #container_name: dbCore
    image: mcr.microsoft.com/mssql/server:2019-latest
    hostname: dbCore
    ports:
      - 1433:1433 
      
    environment:
      - SA_PASSWORD=Password123
      - ACCEPT_EULA=Y
    volumes:
      #- D:/Docker_volumenes/data:/var/opt/mssql/data  
      #- D:/Docker_volumenes/log:/var/opt/mssql/log 
      #- D:/Docker_volumenes/secrets:/var/opt/mssql/secrets
      - type: volume
        source: firstidsrvaspnetidentitydbsys
        target: /var/opt/mssql
      - type: volume
        source: firstidsrvaspnetidentitydbusr
        target: /var/opt/sqlserver
    networks:
      - backend

networks:
  backend:
    name: backend
    driver: bridge

volumes:
  firstidsrvaspnetidentitydbsys:
  firstidsrvaspnetidentitydbusr: